generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// 站点配置信息
model SiteSetting {
  /// 唯一标识符
  id        String   @id @default(cuid())
  /// 配置键名
  key       String   @unique
  /// 配置键值
  value     String
  /// 配置分类
  category  String
  /// 更新时间
  updatedAt DateTime @updatedAt
  /// 创建时间
  createdAt DateTime @default(now())

  @@index([category])
}

/// 商品分类信息
model Category {
  /// 唯一标识符
  id                    String         @id @default(cuid())
  /// 分类名称
  name                  String
  /// 分类的唯一访问路径片段
  slug                  String         @unique
  /// 分类描述
  description           String?
  /// 分类层级
  level                 Int
  /// 父分类ID
  parentId              String?
  /// 分类图片URL
  image                 String?
  /// 是否激活
  isActive              Boolean        @default(true)
  /// 创建时间
  createdAt             DateTime       @default(now())
  /// 更新时间
  updatedAt             DateTime       @updatedAt
  /// 是否在导航栏显示
  showInNavbar          Boolean        @default(false)
  /// 父分类关联
  parent                Category?      @relation("SubCategories", fields: [parentId], references: [id])
  /// 子分类列表关联
  children              Category[]     @relation("SubCategories")
  /// 作为目标分类的内容区块列表
  targetedContentBlocks ContentBlock[] @relation("ContentBlockTargetCategory")
  /// 该分类下的商品列表
  products              Product[]

  @@index([parentId])
  @@index([level])
  @@index([isActive])
  @@index([showInNavbar])
}

/// 品牌信息
model Brand {
  /// 唯一标识符
  id          String         @id @default(cuid())
  /// 品牌名称
  name        String         @unique
  /// 品牌的唯一访问路径片段
  slug        String         @unique
  /// 品牌描述
  description String?
  /// 品牌Logo图片URL
  logo        String?
  /// 品牌官方网站URL
  website     String?
  /// 是否激活
  isActive    Boolean        @default(true)
  /// 创建时间
  createdAt   DateTime       @default(now())
  /// 更新时间
  updatedAt   DateTime       @updatedAt
  /// 是否为热门品牌
  popularity  Boolean        @default(false)
  /// 该品牌下的商品列表
  products    Product[]
  /// 该品牌的折扣列表
  discounts   Discount[]
  /// 品牌映射记录
  brandMappings BrandMapping[]
  /// 关联的 FMTC 商户
  fmtcMerchants FMTCMerchant[]

  @@index([isActive])
  @@index([popularity])
}

/// 商品信息
model Product {
  /// 唯一标识符
  id                    String    @id @default(cuid())
  /// 商品名称
  name                  String
  /// 商品价格
  price                 Decimal
  /// 商品状态 (例如：在售, 下架)
  status                String
  /// 商品描述
  description           String?
  /// 商品图片URL列表
  images                String[]
  /// 商品库存单位 (Stock Keeping Unit)
  sku                   String?
  /// 库存数量
  inventory             Int       @default(0)
  /// 是否已删除
  isDeleted             Boolean   @default(false)
  /// 更新时间
  updatedAt             DateTime  @updatedAt
  /// 创建时间
  createdAt             DateTime  @default(now())
  /// 注意事项
  cautions              String?
  /// 商品颜色列表
  colors                String[]  @default([])
  /// 商品材质
  material              String?
  /// 商品尺码列表
  sizes                 String[]  @default([])
  /// 商品数据来源
  source                String
  /// 推广链接
  promotionUrl          String?
  /// 所属品牌ID
  brandId               String
  /// 所属分类ID
  categoryId            String
  /// 商品视频URL列表
  videos                String[]  @default([])
  /// 折扣金额或百分比
  discount              Decimal?  @db.Decimal(10, 2)
  /// 是否为新品
  isNew                 Boolean   @default(false)
  /// 商品原价
  originalPrice         Decimal?  @db.Decimal(10, 2)
  /// 优惠券代码
  coupon                String?
  /// 优惠券描述
  couponDescription     String?
  /// 优惠券过期日期
  couponExpirationDate  DateTime?
  /// 面包屑导航路径
  breadcrumbs           String[]  @default([])
  /// 货币单位 (例如：USD, CNY)
  currency              String?
  /// 其他元数据 (JSON格式)
  metadata              Json?
  /// 原价货币单位
  originalPriceCurrency String?
  /// 数据抓取时间
  scrapedAt             DateTime?
  /// 商品原始URL
  url                   String?
  /// 设计师颜色名称
  designerColorName     String?
  /// 材质详情列表
  materialDetails       String[]  @default([])
  /// 商品标签列表
  tags                  String[]  @default([])
  /// 适用性别 (例如：男, 女, 通用)
  gender                String?
  /// Sovrn货币化URL (广告联盟跟踪链接)
  adurl                 String?
  /// 所属品牌关联
  brand                 Brand     @relation(fields: [brandId], references: [id])
  /// 所属分类关联
  category              Category  @relation(fields: [categoryId], references: [id])

  @@unique([url, source], name: "url_source")
  @@index([categoryId])
  @@index([brandId])
  @@index([status])
  @@index([isDeleted])
  @@index([sku])
  @@index([source])
}

/// 页面信息 (例如：关于我们、联系我们等自定义页面)
model Page {
  /// 唯一标识符
  id          String    @id @default(cuid())
  /// 页面标题
  title       String
  /// 页面访问URL (唯一)
  url         String    @unique
  /// 页面内容 (HTML或Markdown)
  content     String?
  /// 页面状态 (例如：Draft草稿, Published已发布)
  status      String    @default("Draft")
  /// 创建时间
  createdAt   DateTime  @default(now())
  /// 更新时间
  updatedAt   DateTime  @updatedAt
  /// 发布时间
  publishedAt DateTime?
  /// 页面主图URL
  mainImage   String?
}

/// 代码片段 (用于在特定页面位置插入自定义JS或CSS)
model CodeSnippet {
  /// 唯一标识符
  id          String          @id @default(cuid())
  /// 代码片段名称
  name        String
  /// 实际代码内容
  code        String
  /// 是否激活
  isActive    Boolean         @default(false)
  /// 创建时间
  createdAt   DateTime        @default(now())
  /// 更新时间
  updatedAt   DateTime        @updatedAt
  /// 代码片段描述
  description String?
  /// 生效的页面路径列表 (为空则全局生效)
  paths       String[]        @default([])
  /// 执行优先级 (数字越小优先级越高)
  priority    Int             @default(10)
  /// 代码片段类型 (JS, CSS)
  type        SnippetType
  /// 插入位置 (HEAD, BODY_START, BODY_END)
  location    SnippetLocation

  @@index([isActive])
  @@index([type])
  @@index([location])
}

/// 内容区块 (用于动态管理页面上的内容模块)
model ContentBlock {
  /// 唯一标识符
  id                      String           @id @default(cuid())
  /// 区块的唯一标识符 (用于代码中引用)
  identifier              String           @unique
  /// 是否激活
  isActive                Boolean          @default(true)
  /// 创建时间
  createdAt               DateTime         @default(now())
  /// 更新时间
  updatedAt               DateTime         @updatedAt
  /// 区块自身的配置数据 (JSON格式)
  data                    Json?
  /// 区块描述
  description             String?
  /// 区块名称 (管理后台显示用)
  name                    String
  /// 内容区块类型
  type                    ContentBlockType
  /// 关联的主要目标分类ID
  targetPrimaryCategoryId String?
  /// 关联的主要目标分类
  targetPrimaryCategory   Category?        @relation("ContentBlockTargetCategory", fields: [targetPrimaryCategoryId], references: [id])
  /// 区块内的内容项列表
  items                   ContentItem[]

  @@index([identifier])
  @@index([type])
  @@index([isActive])
  @@index([targetPrimaryCategoryId])
}

/// 内容区块中的具体内容项
model ContentItem {
  /// 唯一标识符
  id             String          @id @default(cuid())
  /// 所属内容区块ID
  parentId       String
  /// 内容项唯一标识符 (可选, 用于特定引用)
  itemIdentifier String?         @unique
  /// 内容项类型
  type           ContentItemType
  /// 内容项名称 (管理后台显示用)
  name           String
  /// 内容项具体数据 (JSON格式, 结构取决于类型)
  data           Json
  /// 显示顺序
  order          Int             @default(0)
  /// 是否激活
  isActive       Boolean         @default(true)
  /// 创建时间
  createdAt      DateTime        @default(now())
  /// 更新时间
  updatedAt      DateTime        @updatedAt
  /// 在父区块模板中的插槽键名
  slotKey        String?
  /// 所属内容区块关联
  parentBlock    ContentBlock    @relation(fields: [parentId], references: [id], onDelete: Cascade)

  @@index([parentId])
  @@index([itemIdentifier])
  @@index([type])
  @@index([isActive])
  @@index([slotKey])
}

/// 爬虫任务定义
model ScraperTaskDefinition {
  /// 唯一标识符
  id               String                 @id @default(cuid())
  /// 任务名称 (唯一)
  name             String                 @unique
  /// 任务描述
  description      String?
  /// 目标站点标识
  targetSite       String
  /// 起始URL列表
  startUrls        String[]
  /// CRON表达式 (用于定时执行)
  cronExpression   String?
  /// 是否启用
  isEnabled        Boolean                @default(true)
  /// 最大请求数限制
  maxRequests      Int?
  /// 页面加载后最大点击次数 (用于模拟交互)
  maxLoadClicks    Int?
  /// 最大抓取商品数限制
  maxProducts      Int?
  /// 默认库存数量
  defaultInventory Int                    @default(99)
  /// 是否启用调试开发模式 (日志将额外输出到本地文件)
  isDebugModeEnabled Boolean @default(false)
  /// 创建时间
  createdAt        DateTime               @default(now())
  /// 更新时间
  updatedAt        DateTime               @updatedAt
  /// 该任务的执行记录列表
  executions       ScraperTaskExecution[]

  @@index([targetSite])
  @@index([isEnabled])
}

/// 爬虫任务执行记录
model ScraperTaskExecution {
  /// 唯一标识符
  id               String                 @id @default(cuid())
  /// 关联的任务定义ID
  taskDefinitionId String
  /// 执行状态
  status           ScraperTaskStatus      @default(IDLE)
  /// 触发类型 (手动, 定时, API)
  triggerType      ScraperTaskTriggerType
  /// 开始时间
  startedAt        DateTime?
  /// 完成时间
  completedAt      DateTime?
  /// 执行指标 (JSON格式, 例如：抓取数量, 耗时)
  metrics          Json?
  /// 错误信息 (如果执行失败)
  errorMessage     String?
  /// 错误堆栈信息
  errorStack       String?
  /// 创建时间
  createdAt        DateTime               @default(now())
  /// 更新时间
  updatedAt        DateTime               @updatedAt
  /// 关联的任务定义
  taskDefinition   ScraperTaskDefinition  @relation(fields: [taskDefinitionId], references: [id], onDelete: Cascade)
  /// 该次执行的日志记录列表
  logs             ScraperTaskLog[]

  @@index([taskDefinitionId])
  @@index([status])
  @@index([triggerType])
}

/// 爬虫任务执行日志
model ScraperTaskLog {
  /// 唯一标识符
  id          String               @id @default(cuid())
  /// 关联的执行记录ID
  executionId String
  /// 日志级别 (INFO, WARN, ERROR, DEBUG)
  level       ScraperLogLevel
  /// 日志消息
  message     String
  /// 日志时间戳
  timestamp   DateTime             @default(now())
  /// 上下文信息 (JSON格式)
  context     Json?
  /// 关联的执行记录
  execution   ScraperTaskExecution @relation(fields: [executionId], references: [id], onDelete: Cascade)

  @@index([executionId])
  @@index([level])
  @@index([timestamp])
}

/// 代码片段类型
enum SnippetType {
  /// JavaScript 代码
  JS
  /// CSS 样式代码
  CSS
}

/// 代码片段在HTML中的插入位置
enum SnippetLocation {
  /// 插入到 <head> 标签内
  HEAD
  /// 插入到 <body> 标签开始之后
  BODY_START
  /// 插入到 <body> 标签结束之前
  BODY_END
}

/// 内容区块的类型
enum ContentBlockType {
  /// 横幅广告或推广图
  BANNER
  /// 介绍性区块
  INTRODUCTION_SECTION
  /// 商品网格英雄区 (通常较大, 突出展示)
  PRODUCT_GRID_HERO
  /// 趋势区块容器 (包含多个趋势卡片)
  TRENDING_SECTION_CONTAINER
  /// 可配置的商品网格
  PRODUCT_GRID_CONFIGURABLE
}

/// 内容区块中具体项的类型
enum ContentItemType {
  /// 大号趋势卡片
  TRENDING_CARD_LARGE
  /// 普通趋势卡片
  TRENDING_CARD_NORMAL
  /// 独立趋势卡片
  TRENDING_CARD_STANDALONE
  /// 闪亮/特别推荐卡片
  SHINING_CARD
  /// 文本链接块
  TEXT_LINK_BLOCK
  /// 介绍性区块中的保障/承诺项
  INTRODUCTION_GUARANTEE_ITEM
  /// 商品引用 (直接展示商品信息)
  PRODUCT_REFERENCE
}

/// 爬虫任务执行状态
enum ScraperTaskStatus {
  /// 空闲状态
  IDLE
  /// 已加入队列等待执行
  QUEUED
  /// 正在执行
  RUNNING
  /// 执行完成
  COMPLETED
  /// 执行失败
  FAILED
  /// 已取消
  CANCELLED
}

/// 爬虫任务触发类型
enum ScraperTaskTriggerType {
  /// 手动触发
  MANUAL
  /// 定时调度触发
  SCHEDULED
  /// 通过API接口触发
  API
}

/// 爬虫日志级别
enum ScraperLogLevel {
  /// 信息
  INFO
  /// 警告
  WARN
  /// 错误
  ERROR
  /// 调试信息
  DEBUG
}

// --- Auth.js 模型 ---

model User {
  id            String           @id @default(cuid())
  name          String?
  email         String?          @unique
  emailVerified DateTime?
  image         String?
  passwordHash  String?          // 新增：用于存储哈希后的密码
  accounts      Account[]
  sessions      Session[]
  discountImports DiscountImport[]
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// --- FMTC 折扣管理模型 ---

/// 折扣/优惠券信息
model Discount {
  /// 唯一标识符
  id          String           @id @default(cuid())
  /// 商家名称 (对应 FMTC 的 Merchant 字段)
  merchantName String
  /// 折扣标题/描述 (对应 FMTC 的 Deal 字段)
  title       String
  /// 折扣码 (对应 FMTC 的 Code 字段)
  code        String?
  /// 折扣类型
  type        DiscountType     @default(OTHER)
  /// 折扣值 (百分比或固定金额)
  value       Decimal?
  /// 最小订单金额
  minAmount   Decimal?
  /// 最大折扣金额
  maxAmount   Decimal?
  
  // FMTC 特有字段
  /// FMTC 更新时间 (对应 Updated 字段)
  fmtcUpdated DateTime?
  /// 开始时间 (对应 Start 字段)
  startDate   DateTime?
  /// 结束时间 (对应 End 字段)
  endDate     DateTime?
  /// FMTC 评分 (对应 Rating 字段)
  rating      Decimal?
  /// 折扣状态 (new, active, not started 等)
  dealStatus  String?
  
  // 系统管理字段
  /// 是否激活
  isActive    Boolean          @default(true)
  /// 是否过期
  isExpired   Boolean          @default(false)
  /// 数据来源
  source      String           @default("FMTC")
  /// 原始数据来源ID
  sourceId    String?
  /// 原始链接
  originalUrl String?
  
  // 品牌关联
  /// 关联的品牌ID
  brandId     String?
  /// 关联的品牌
  brand       Brand?           @relation(fields: [brandId], references: [id])
  
  // 使用统计
  /// 使用次数
  useCount    Int              @default(0)
  /// 最大使用次数
  maxUses     Int?
  
  // 元数据
  /// 原始导入数据 (JSON格式)
  rawData     Json?
  /// 导入时间
  importedAt  DateTime         @default(now())
  /// 更新时间
  updatedAt   DateTime         @updatedAt
  /// 创建时间
  createdAt   DateTime         @default(now())
  
  @@index([merchantName])
  @@index([brandId])
  @@index([isActive, isExpired])
  @@index([endDate])
  @@index([source])
  @@index([dealStatus])
  @@index([startDate])
  @@index([code])
}

/// 折扣导入记录
model DiscountImport {
  /// 唯一标识符
  id           String            @id @default(cuid())
  /// 导入文件名
  fileName     String?
  /// 原始内容
  rawContent   String            @db.Text
  /// 解析后的数据
  parsedData   Json
  /// 导入状态
  status       ImportStatus      @default(PENDING)
  /// 总记录数
  totalRecords Int               @default(0)
  /// 成功导入数
  successCount Int               @default(0)
  /// 错误数量
  errorCount   Int               @default(0)
  /// 跳过数量 (重复等)
  skippedCount Int               @default(0)
  /// 错误详情
  errors       Json?
  /// 导入类型 (PASTE, FILE, API)
  importType   ImportType        @default(PASTE)
  
  /// 执行用户ID
  userId       String?
  /// 执行用户
  user         User?             @relation(fields: [userId], references: [id])
  
  /// 创建时间
  createdAt    DateTime          @default(now())
  /// 完成时间
  completedAt  DateTime?
  /// 更新时间
  updatedAt    DateTime          @updatedAt
  
  @@index([status])
  @@index([createdAt])
  @@index([userId])
  @@index([importType])
}

/// 品牌匹配映射 (用于FMTC商家名称到系统品牌的映射)
model BrandMapping {
  /// 唯一标识符
  id            String        @id @default(cuid())
  /// FMTC商家名称 (原始名称)
  merchantName  String        @unique
  /// 系统中的品牌ID
  brandId       String?
  /// 系统中的品牌
  brand         Brand?        @relation(fields: [brandId], references: [id])
  /// 是否已确认匹配
  isConfirmed   Boolean       @default(false)
  /// 匹配置信度 (0-1)
  confidence    Decimal?      @db.Decimal(3, 2)
  /// 关联的 FMTC 商户ID
  fmtcMerchantId String?
  /// 关联的 FMTC 商户
  fmtcMerchant   FMTCMerchant? @relation(fields: [fmtcMerchantId], references: [id])
  /// 创建时间
  createdAt     DateTime      @default(now())
  /// 更新时间
  updatedAt     DateTime      @updatedAt
  
  @@index([merchantName])
  @@index([brandId])
  @@index([isConfirmed])
  @@index([fmtcMerchantId])
}

/// 折扣类型枚举
enum DiscountType {
  /// 百分比折扣
  PERCENTAGE
  /// 固定金额折扣
  FIXED_AMOUNT
  /// 免费送货
  FREE_SHIPPING
  /// 买X送Y
  BUY_X_GET_Y
  /// 其他类型
  OTHER
}

/// 导入状态枚举
enum ImportStatus {
  /// 等待处理
  PENDING
  /// 处理中
  PROCESSING
  /// 完成
  COMPLETED
  /// 失败
  FAILED
  /// 部分成功
  PARTIAL
}

/// 导入类型枚举
enum ImportType {
  /// 粘贴文本
  PASTE
  /// 文件上传
  FILE
  /// API导入
  API
}

// --- FMTC 配置管理模型 ---

/// FMTC 爬虫全局配置
model FMTCScraperConfig {
  /// 唯一标识符
  id                    String                  @id @default(cuid())
  /// 配置名称 (唯一)
  name                  String                  @unique @default("default")
  /// 配置描述
  description           String?
  
  // 基础配置
  /// 默认用户名
  defaultUsername       String?
  /// 默认密码 (加密存储)
  defaultPassword       String?
  /// 默认最大页数
  maxPages              Int                     @default(10)
  /// 默认最大商户数
  maxMerchants          Int                     @default(500)
  /// 默认请求延迟(毫秒)
  requestDelay          Int                     @default(2000)
  /// 是否启用图片下载
  enableImageDownload   Boolean                 @default(false)
  /// 是否启用无头模式
  headlessMode          Boolean                 @default(true)
  /// 是否启用调试模式
  debugMode             Boolean                 @default(false)
  /// 默认最大并发数
  maxConcurrency        Int                     @default(1)
  
  // reCAPTCHA 配置
  /// reCAPTCHA 模式 (manual, auto, skip)
  recaptchaMode         String                  @default("manual")
  /// 手动超时时间(毫秒)
  recaptchaManualTimeout    Int                 @default(120000)
  /// 自动超时时间(毫秒)
  recaptchaAutoTimeout      Int                 @default(180000)
  /// reCAPTCHA 重试次数
  recaptchaRetryAttempts    Int                 @default(3)
  /// reCAPTCHA 重试延迟(毫秒)
  recaptchaRetryDelay       Int                 @default(5000)
  
  // 2captcha 配置
  /// 2captcha API 密钥
  twoCaptchaApiKey      String?
  /// 2captcha 软件ID
  twoCaptchaSoftId      Int                     @default(4580)
  /// 2captcha 服务器域名
  twoCaptchaServerDomain String                @default("2captcha.com")
  /// 2captcha 回调地址
  twoCaptchaCallback    String?
  
  // 搜索配置
  /// 默认搜索文本
  searchText            String?
  /// 默认网络ID
  searchNetworkId       String?
  /// 默认OPM提供商
  searchOpmProvider     String?
  /// 默认搜索分类
  searchCategory        String?
  /// 默认搜索国家
  searchCountry         String?
  /// 默认配送国家
  searchShippingCountry String?
  /// 默认显示类型 (all, accepting, not_accepting)
  searchDisplayType     String                  @default("all")
  
  // 搜索行为配置
  /// 是否启用随机延迟
  searchEnableRandomDelay Boolean               @default(true)
  /// 搜索最小延迟(毫秒)
  searchMinDelay        Int                     @default(500)
  /// 搜索最大延迟(毫秒)
  searchMaxDelay        Int                     @default(2000)
  /// 最小输入延迟(毫秒)
  searchTypingDelayMin  Int                     @default(50)
  /// 最大输入延迟(毫秒)
  searchTypingDelayMax  Int                     @default(200)
  /// 是否启用鼠标移动模拟
  searchEnableMouseMovement Boolean             @default(true)
  
  // 高级配置
  /// 会话超时时间(毫秒)
  sessionTimeout        Int                     @default(1800000)
  /// 最大连续错误数
  maxConsecutiveErrors  Int                     @default(5)
  /// 错误冷却时间(毫秒)
  errorCooldownPeriod   Int                     @default(30000)
  
  /// 是否启用此配置
  isEnabled             Boolean                 @default(true)
  /// 创建时间
  createdAt             DateTime                @default(now())
  /// 更新时间
  updatedAt             DateTime                @updatedAt
  
  @@index([isEnabled])
  @@index([name])
}

// --- FMTC 商户管理模型 ---

/// FMTC 商户信息
model FMTCMerchant {
  /// 唯一标识符
  id                    String               @id @default(cuid())
  
  // 基本信息 (来自列表页)
  /// 商户名称
  name                  String
  /// 商户国家
  country               String?
  /// 网络平台 (联盟平台名称)
  network               String?
  /// 在FMTC上的添加日期
  dateAdded             DateTime?
  /// 高级订阅数量
  premiumSubscriptions  Int?                 @default(0)
  
  // 详细信息 (来自详情页)
  /// 官方网站 URL
  homepage              String?
  /// 主要分类
  primaryCategory       String?
  /// 主要国家
  primaryCountry        String?
  /// 配送地区
  shipsTo               String[]             @default([])
  /// FMTC 内部 ID
  fmtcId                String?              @unique
  /// 网络 ID (如 AW ID)
  networkId             String?
  /// 商户状态
  status                String?
  /// 是否支持 FreshReach
  freshReachSupported   Boolean              @default(false)
  
  // 品牌图片信息
  /// 120x60 Logo URL
  logo120x60            String?
  /// 88x31 Logo URL
  logo88x31             String?
  /// 280x210 截图 URL
  screenshot280x210     String?
  /// 600x450 截图 URL
  screenshot600x450     String?
  
  // 关联链接
  /// 联盟链接 (如 AW URL)
  affiliateUrl          String?
  /// 预览优惠链接
  previewDealsUrl       String?
  /// 联盟链接详情 (JSON: {"AW": ["url1", "url2"], "CJ": ["url3"]})
  affiliateLinks        Json?
  /// FreshReach 链接列表
  freshReachUrls        String[]             @default([])
  
  // 数据管理
  /// 数据来源页面 URL
  sourceUrl             String?
  /// 最后抓取时间
  lastScrapedAt         DateTime?
  /// 是否激活
  isActive              Boolean              @default(true)
  /// 原始数据 (JSON)
  rawData               Json?
  
  // 品牌关联
  /// 关联的系统品牌ID
  brandId               String?
  /// 关联的系统品牌
  brand                 Brand?               @relation(fields: [brandId], references: [id])
  /// 匹配置信度
  brandMatchConfidence  Decimal?             @db.Decimal(3, 2)
  /// 是否已确认品牌匹配
  brandMatchConfirmed   Boolean              @default(false)
  
  // 网络关联信息
  networks              FMTCMerchantNetwork[]
  /// 品牌映射记录
  brandMappings         BrandMapping[]
  
  // 时间戳
  createdAt             DateTime             @default(now())
  updatedAt             DateTime             @updatedAt
  
  @@index([name])
  @@index([country])
  @@index([network])
  @@index([fmtcId])
  @@index([brandId])
  @@index([isActive])
  @@index([lastScrapedAt])
}

/// FMTC 商户网络关联信息
model FMTCMerchantNetwork {
  /// 唯一标识符
  id           String       @id @default(cuid())
  /// 商户ID
  merchantId   String
  /// 网络名称
  networkName  String
  /// 网络ID
  networkId    String?
  /// 加入状态 (Joined, Not Joined, Relationship Not Verified)
  status       String
  /// 是否激活
  isActive     Boolean      @default(true)
  /// 关联的商户
  merchant     FMTCMerchant @relation(fields: [merchantId], references: [id], onDelete: Cascade)
  /// 创建时间
  createdAt    DateTime     @default(now())
  /// 更新时间
  updatedAt    DateTime     @updatedAt
  
  @@index([merchantId])
  @@index([networkName])
  @@index([status])
}

/// FMTC 抓取任务配置
model FMTCScraperTask {
  /// 唯一标识符
  id                    String                    @id @default(cuid())
  /// 任务名称
  name                  String                    @unique
  /// 任务描述
  description           String?
  /// FMTC 登录凭据 (加密存储)
  credentials           Json
  /// 抓取配置 (页数限制、过滤条件等)
  config                Json
  /// 是否启用
  isEnabled             Boolean                   @default(true)
  /// CRON 表达式 (定时执行)
  cronExpression        String?
  /// 最后执行时间
  lastExecutedAt        DateTime?
  /// 下次执行时间
  nextExecuteAt         DateTime?
  /// 执行记录
  executions            FMTCScraperExecution[]
  /// 创建时间
  createdAt             DateTime                  @default(now())
  /// 更新时间
  updatedAt             DateTime                 @updatedAt
  
  @@index([isEnabled])
  @@index([nextExecuteAt])
}

/// FMTC 抓取执行记录
model FMTCScraperExecution {
  /// 唯一标识符
  id              String            @id @default(cuid())
  /// 任务ID
  taskId          String
  /// 执行状态
  status          ScraperTaskStatus @default(IDLE)
  /// 开始时间
  startedAt       DateTime?
  /// 完成时间
  completedAt     DateTime?
  /// 抓取统计
  metrics         Json?
  /// 错误信息
  errorMessage    String?
  /// 错误堆栈
  errorStack      String?
  /// 抓取的商户数量
  merchantsCount  Int               @default(0)
  /// 新增商户数量
  newMerchantsCount Int             @default(0)
  /// 更新商户数量
  updatedMerchantsCount Int         @default(0)
  /// 关联任务
  task            FMTCScraperTask   @relation(fields: [taskId], references: [id], onDelete: Cascade)
  /// 创建时间
  createdAt       DateTime          @default(now())
  /// 更新时间
  updatedAt       DateTime          @updatedAt
  
  @@index([taskId])
  @@index([status])
  @@index([startedAt])
}
